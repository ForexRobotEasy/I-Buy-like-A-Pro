mql5
// Developer: Forex Robot Easy Team
// Developer's site: forexroboteasy.com
// Program name: I Buy like A Pro

// Include necessary libraries
#include <Trade\Trade.mqh>
#include <Trade\PositionInfo.mqh>

// Define constants
#define TP_PERCENT 0.5 // Take profit percentage
#define SL_PERCENT 1.0 // Stop loss percentage
#define MAX_LOSS 100.0 // Maximum acceptable loss

// Initialize trade object
CTrade trade;

// Define function to check for quiet night market conditions
bool isQuietNightMarket()
{
   // Implement algorithm to identify quiet night market conditions
   // Use real-time forex data feeds to determine market volatility
   // Return true if conditions are met, false otherwise
}

// Define function to manage risk and calculate lot size
double calculateLotSize()
{
   double accountBalance = AccountBalance();
   double stopLoss = NormalizeDouble(SymbolInfoDouble(_Symbol, SYMBOL_TRADE_STOPSLEVEL) * SL_PERCENT, Digits());
   
   // Calculate lot size based on maximum acceptable loss and stop loss
   double lotSize = NormalizeDouble((MAX_LOSS * accountBalance) / (stopLoss * MarketInfo(_Symbol, MODE_TICKVALUE)), 2);
   
   return lotSize;
}

// Define function to execute trade
void executeTrade()
{
   double currentPrice = SymbolInfoDouble(_Symbol, SYMBOL_ASK);
   double takeProfit = NormalizeDouble(currentPrice + (currentPrice * TP_PERCENT), Digits());
   double stopLoss = NormalizeDouble(currentPrice - (currentPrice * SL_PERCENT), Digits());
   double lotSize = calculateLotSize();
   
   // Execute buy trade at current price with calculated lot size, take profit, and stop loss
   trade.Buy(lotSize, _Symbol, currentPrice, takeProfit, stopLoss);
}

// Start of the program
void OnStart()
{
   // Check for quiet night market conditions
   if (isQuietNightMarket())
   {
      // Execute trade
      executeTrade();
   }
}
